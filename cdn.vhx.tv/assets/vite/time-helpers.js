import{g as G,c as L,h as U,j as c,k as s,l as w,n as d,f}from"./format.js";function K(){return Object.assign({},G())}function ee(e,t){const a=(t==null?void 0:t.additionalDigits)??2,n=re(e);let r;if(n.date){const m=oe(n.date,a);r=ie(m.restDateString,m.year)}if(!r||isNaN(r.getTime()))return new Date(NaN);const o=r.getTime();let i=0,u;if(n.time&&(i=se(n.time),isNaN(i)))return new Date(NaN);if(n.timezone){if(u=de(n.timezone),isNaN(u))return new Date(NaN)}else{const m=new Date(o+i),l=new Date(0);return l.setFullYear(m.getUTCFullYear(),m.getUTCMonth(),m.getUTCDate()),l.setHours(m.getUTCHours(),m.getUTCMinutes(),m.getUTCSeconds(),m.getUTCMilliseconds()),l}return new Date(o+i+u)}const M={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},te=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,ae=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,ne=/^([+-])(\d{2})(?::?(\d{2}))?$/;function re(e){const t={},a=e.split(M.dateTimeDelimiter);let n;if(a.length>2)return t;if(/:/.test(a[0])?n=a[0]:(t.date=a[0],n=a[1],M.timeZoneDelimiter.test(t.date)&&(t.date=e.split(M.timeZoneDelimiter)[0],n=e.substr(t.date.length,e.length))),n){const r=M.timezone.exec(n);r?(t.time=n.replace(r[1],""),t.timezone=r[1]):t.time=n}return t}function oe(e,t){const a=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),n=e.match(a);if(!n)return{year:NaN,restDateString:""};const r=n[1]?parseInt(n[1]):null,o=n[2]?parseInt(n[2]):null;return{year:o===null?r:o*100,restDateString:e.slice((n[1]||n[2]).length)}}function ie(e,t){if(t===null)return new Date(NaN);const a=e.match(te);if(!a)return new Date(NaN);const n=!!a[4],r=p(a[1]),o=p(a[2])-1,i=p(a[3]),u=p(a[4]),m=p(a[5])-1;if(n)return he(t,u,m)?me(t,u,m):new Date(NaN);{const l=new Date(0);return!ce(t,o,i)||!le(t,r)?new Date(NaN):(l.setUTCFullYear(t,o,Math.max(r,i)),l)}}function p(e){return e?parseInt(e):1}function se(e){const t=e.match(ae);if(!t)return NaN;const a=y(t[1]),n=y(t[2]),r=y(t[3]);return fe(a,n,r)?a*L+n*U+r*1e3:NaN}function y(e){return e&&parseFloat(e.replace(",","."))||0}function de(e){if(e==="Z")return 0;const t=e.match(ne);if(!t)return 0;const a=t[1]==="+"?-1:1,n=parseInt(t[2]),r=t[3]&&parseInt(t[3])||0;return ge(n,r)?a*(n*L+r*U):NaN}function me(e,t,a){const n=new Date(0);n.setUTCFullYear(e,0,4);const r=n.getUTCDay()||7,o=(t-1)*7+a+1-r;return n.setUTCDate(n.getUTCDate()+o),n}const ue=[31,null,31,30,31,30,31,31,30,31,30,31];function J(e){return e%400===0||e%4===0&&e%100!==0}function ce(e,t,a){return t>=0&&t<=11&&a>=1&&a<=(ue[t]||(J(e)?29:28))}function le(e,t){return t>=1&&t<=(J(e)?366:365)}function he(e,t,a){return t>=1&&t<=53&&a>=0&&a<=6}function fe(e,t,a){return e===24?t===0&&a===0:a>=0&&a<60&&t>=0&&t<60&&e>=0&&e<25}function ge(e,t){return t>=0&&t<=59}const C={lessThanXSeconds:{standalone:{one:"weniger als 1 Sekunde",other:"weniger als {{count}} Sekunden"},withPreposition:{one:"weniger als 1 Sekunde",other:"weniger als {{count}} Sekunden"}},xSeconds:{standalone:{one:"1 Sekunde",other:"{{count}} Sekunden"},withPreposition:{one:"1 Sekunde",other:"{{count}} Sekunden"}},halfAMinute:{standalone:"halbe Minute",withPreposition:"halben Minute"},lessThanXMinutes:{standalone:{one:"weniger als 1 Minute",other:"weniger als {{count}} Minuten"},withPreposition:{one:"weniger als 1 Minute",other:"weniger als {{count}} Minuten"}},xMinutes:{standalone:{one:"1 Minute",other:"{{count}} Minuten"},withPreposition:{one:"1 Minute",other:"{{count}} Minuten"}},aboutXHours:{standalone:{one:"etwa 1 Stunde",other:"etwa {{count}} Stunden"},withPreposition:{one:"etwa 1 Stunde",other:"etwa {{count}} Stunden"}},xHours:{standalone:{one:"1 Stunde",other:"{{count}} Stunden"},withPreposition:{one:"1 Stunde",other:"{{count}} Stunden"}},xDays:{standalone:{one:"1 Tag",other:"{{count}} Tage"},withPreposition:{one:"1 Tag",other:"{{count}} Tagen"}},aboutXWeeks:{standalone:{one:"etwa 1 Woche",other:"etwa {{count}} Wochen"},withPreposition:{one:"etwa 1 Woche",other:"etwa {{count}} Wochen"}},xWeeks:{standalone:{one:"1 Woche",other:"{{count}} Wochen"},withPreposition:{one:"1 Woche",other:"{{count}} Wochen"}},aboutXMonths:{standalone:{one:"etwa 1 Monat",other:"etwa {{count}} Monate"},withPreposition:{one:"etwa 1 Monat",other:"etwa {{count}} Monaten"}},xMonths:{standalone:{one:"1 Monat",other:"{{count}} Monate"},withPreposition:{one:"1 Monat",other:"{{count}} Monaten"}},aboutXYears:{standalone:{one:"etwa 1 Jahr",other:"etwa {{count}} Jahre"},withPreposition:{one:"etwa 1 Jahr",other:"etwa {{count}} Jahren"}},xYears:{standalone:{one:"1 Jahr",other:"{{count}} Jahre"},withPreposition:{one:"1 Jahr",other:"{{count}} Jahren"}},overXYears:{standalone:{one:"mehr als 1 Jahr",other:"mehr als {{count}} Jahre"},withPreposition:{one:"mehr als 1 Jahr",other:"mehr als {{count}} Jahren"}},almostXYears:{standalone:{one:"fast 1 Jahr",other:"fast {{count}} Jahre"},withPreposition:{one:"fast 1 Jahr",other:"fast {{count}} Jahren"}}},we=(e,t,a)=>{let n;const r=a!=null&&a.addSuffix?C[e].withPreposition:C[e].standalone;return typeof r=="string"?n=r:t===1?n=r.one:n=r.other.replace("{{count}}",String(t)),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?"in "+n:"vor "+n:n},pe={full:"EEEE, do MMMM y",long:"do MMMM y",medium:"do MMM y",short:"dd.MM.y"},Me={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},be={full:"{{date}} 'um' {{time}}",long:"{{date}} 'um' {{time}}",medium:"{{date}} {{time}}",short:"{{date}} {{time}}"},ye={date:c({formats:pe,defaultWidth:"full"}),time:c({formats:Me,defaultWidth:"full"}),dateTime:c({formats:be,defaultWidth:"full"})},ve={lastWeek:"'letzten' eeee 'um' p",yesterday:"'gestern um' p",today:"'heute um' p",tomorrow:"'morgen um' p",nextWeek:"eeee 'um' p",other:"P"},Pe=(e,t,a,n)=>ve[e],De={narrow:["v.Chr.","n.Chr."],abbreviated:["v.Chr.","n.Chr."],wide:["vor Christus","nach Christus"]},$e={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1. Quartal","2. Quartal","3. Quartal","4. Quartal"]},W={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],wide:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]},Te={narrow:W.narrow,abbreviated:["Jan.","Feb.","März","Apr.","Mai","Juni","Juli","Aug.","Sep.","Okt.","Nov.","Dez."],wide:W.wide},We={narrow:["S","M","D","M","D","F","S"],short:["So","Mo","Di","Mi","Do","Fr","Sa"],abbreviated:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],wide:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},Ne={narrow:{am:"vm.",pm:"nm.",midnight:"Mitternacht",noon:"Mittag",morning:"Morgen",afternoon:"Nachm.",evening:"Abend",night:"Nacht"},abbreviated:{am:"vorm.",pm:"nachm.",midnight:"Mitternacht",noon:"Mittag",morning:"Morgen",afternoon:"Nachmittag",evening:"Abend",night:"Nacht"},wide:{am:"vormittags",pm:"nachmittags",midnight:"Mitternacht",noon:"Mittag",morning:"Morgen",afternoon:"Nachmittag",evening:"Abend",night:"Nacht"}},xe={narrow:{am:"vm.",pm:"nm.",midnight:"Mitternacht",noon:"Mittag",morning:"morgens",afternoon:"nachm.",evening:"abends",night:"nachts"},abbreviated:{am:"vorm.",pm:"nachm.",midnight:"Mitternacht",noon:"Mittag",morning:"morgens",afternoon:"nachmittags",evening:"abends",night:"nachts"},wide:{am:"vormittags",pm:"nachmittags",midnight:"Mitternacht",noon:"Mittag",morning:"morgens",afternoon:"nachmittags",evening:"abends",night:"nachts"}},Se=e=>Number(e)+".",Ce={ordinalNumber:Se,era:s({values:De,defaultWidth:"wide"}),quarter:s({values:$e,defaultWidth:"wide",argumentCallback:e=>e-1}),month:s({values:W,formattingValues:Te,defaultWidth:"wide"}),day:s({values:We,defaultWidth:"wide"}),dayPeriod:s({values:Ne,defaultWidth:"wide",formattingValues:xe,defaultFormattingWidth:"wide"})},je=/^(\d+)(\.)?/i,ze=/\d+/i,Oe={narrow:/^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,abbreviated:/^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,wide:/^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i},He={any:[/^v/i,/^n/i]},Ye={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](\.)? Quartal/i},ke={any:[/1/i,/2/i,/3/i,/4/i]},Ie={narrow:/^[jfmasond]/i,abbreviated:/^(j[aä]n|feb|mär[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\.?/i,wide:/^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i},Ae={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^j[aä]/i,/^f/i,/^mär/i,/^ap/i,/^mai/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},Fe={narrow:/^[smdmf]/i,short:/^(so|mo|di|mi|do|fr|sa)/i,abbreviated:/^(son?|mon?|die?|mit?|don?|fre?|sam?)\.?/i,wide:/^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i},Ee={any:[/^so/i,/^mo/i,/^di/i,/^mi/i,/^do/i,/^f/i,/^sa/i]},Xe={narrow:/^(vm\.?|nm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,abbreviated:/^(vorm\.?|nachm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,wide:/^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i},_e={any:{am:/^v/i,pm:/^n/i,midnight:/^Mitte/i,noon:/^Mitta/i,morning:/morgens/i,afternoon:/nachmittags/i,evening:/abends/i,night:/nachts/i}},Le={ordinalNumber:w({matchPattern:je,parsePattern:ze,valueCallback:e=>parseInt(e)}),era:d({matchPatterns:Oe,defaultMatchWidth:"wide",parsePatterns:He,defaultParseWidth:"any"}),quarter:d({matchPatterns:Ye,defaultMatchWidth:"wide",parsePatterns:ke,defaultParseWidth:"any",valueCallback:e=>e+1}),month:d({matchPatterns:Ie,defaultMatchWidth:"wide",parsePatterns:Ae,defaultParseWidth:"any"}),day:d({matchPatterns:Fe,defaultMatchWidth:"wide",parsePatterns:Ee,defaultParseWidth:"any"}),dayPeriod:d({matchPatterns:Xe,defaultMatchWidth:"wide",parsePatterns:_e,defaultParseWidth:"any"})},Ue={code:"de",formatDistance:we,formatLong:ye,formatRelative:Pe,localize:Ce,match:Le,options:{weekStartsOn:1,firstWeekContainsDate:4}},Je={lessThanXSeconds:{one:"menos de un segundo",other:"menos de {{count}} segundos"},xSeconds:{one:"1 segundo",other:"{{count}} segundos"},halfAMinute:"medio minuto",lessThanXMinutes:{one:"menos de un minuto",other:"menos de {{count}} minutos"},xMinutes:{one:"1 minuto",other:"{{count}} minutos"},aboutXHours:{one:"alrededor de 1 hora",other:"alrededor de {{count}} horas"},xHours:{one:"1 hora",other:"{{count}} horas"},xDays:{one:"1 día",other:"{{count}} días"},aboutXWeeks:{one:"alrededor de 1 semana",other:"alrededor de {{count}} semanas"},xWeeks:{one:"1 semana",other:"{{count}} semanas"},aboutXMonths:{one:"alrededor de 1 mes",other:"alrededor de {{count}} meses"},xMonths:{one:"1 mes",other:"{{count}} meses"},aboutXYears:{one:"alrededor de 1 año",other:"alrededor de {{count}} años"},xYears:{one:"1 año",other:"{{count}} años"},overXYears:{one:"más de 1 año",other:"más de {{count}} años"},almostXYears:{one:"casi 1 año",other:"casi {{count}} años"}},Ve=(e,t,a)=>{let n;const r=Je[e];return typeof r=="string"?n=r:t===1?n=r.one:n=r.other.replace("{{count}}",t.toString()),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?"en "+n:"hace "+n:n},qe={full:"EEEE, d 'de' MMMM 'de' y",long:"d 'de' MMMM 'de' y",medium:"d MMM y",short:"dd/MM/y"},Re={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},Ze={full:"{{date}} 'a las' {{time}}",long:"{{date}} 'a las' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Qe={date:c({formats:qe,defaultWidth:"full"}),time:c({formats:Re,defaultWidth:"full"}),dateTime:c({formats:Ze,defaultWidth:"full"})},Be={lastWeek:"'el' eeee 'pasado a la' p",yesterday:"'ayer a la' p",today:"'hoy a la' p",tomorrow:"'mañana a la' p",nextWeek:"eeee 'a la' p",other:"P"},Ge={lastWeek:"'el' eeee 'pasado a las' p",yesterday:"'ayer a las' p",today:"'hoy a las' p",tomorrow:"'mañana a las' p",nextWeek:"eeee 'a las' p",other:"P"},Ke=(e,t,a,n)=>t.getHours()!==1?Ge[e]:Be[e],et={narrow:["AC","DC"],abbreviated:["AC","DC"],wide:["antes de cristo","después de cristo"]},tt={narrow:["1","2","3","4"],abbreviated:["T1","T2","T3","T4"],wide:["1º trimestre","2º trimestre","3º trimestre","4º trimestre"]},at={narrow:["e","f","m","a","m","j","j","a","s","o","n","d"],abbreviated:["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],wide:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},nt={narrow:["d","l","m","m","j","v","s"],short:["do","lu","ma","mi","ju","vi","sá"],abbreviated:["dom","lun","mar","mié","jue","vie","sáb"],wide:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},rt={narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"mañana",afternoon:"tarde",evening:"tarde",night:"noche"},abbreviated:{am:"AM",pm:"PM",midnight:"medianoche",noon:"mediodia",morning:"mañana",afternoon:"tarde",evening:"tarde",night:"noche"},wide:{am:"a.m.",pm:"p.m.",midnight:"medianoche",noon:"mediodia",morning:"mañana",afternoon:"tarde",evening:"tarde",night:"noche"}},ot={narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"de la mañana",afternoon:"de la tarde",evening:"de la tarde",night:"de la noche"},abbreviated:{am:"AM",pm:"PM",midnight:"medianoche",noon:"mediodia",morning:"de la mañana",afternoon:"de la tarde",evening:"de la tarde",night:"de la noche"},wide:{am:"a.m.",pm:"p.m.",midnight:"medianoche",noon:"mediodia",morning:"de la mañana",afternoon:"de la tarde",evening:"de la tarde",night:"de la noche"}},it=(e,t)=>Number(e)+"º",st={ordinalNumber:it,era:s({values:et,defaultWidth:"wide"}),quarter:s({values:tt,defaultWidth:"wide",argumentCallback:e=>Number(e)-1}),month:s({values:at,defaultWidth:"wide"}),day:s({values:nt,defaultWidth:"wide"}),dayPeriod:s({values:rt,defaultWidth:"wide",formattingValues:ot,defaultFormattingWidth:"wide"})},dt=/^(\d+)(º)?/i,mt=/\d+/i,ut={narrow:/^(ac|dc|a|d)/i,abbreviated:/^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,wide:/^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i},ct={any:[/^ac/i,/^dc/i],wide:[/^(antes de cristo|antes de la era com[uú]n)/i,/^(despu[eé]s de cristo|era com[uú]n)/i]},lt={narrow:/^[1234]/i,abbreviated:/^T[1234]/i,wide:/^[1234](º)? trimestre/i},ht={any:[/1/i,/2/i,/3/i,/4/i]},ft={narrow:/^[efmajsond]/i,abbreviated:/^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,wide:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i},gt={narrow:[/^e/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^en/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i]},wt={narrow:/^[dlmjvs]/i,short:/^(do|lu|ma|mi|ju|vi|s[áa])/i,abbreviated:/^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,wide:/^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i},pt={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^do/i,/^lu/i,/^ma/i,/^mi/i,/^ju/i,/^vi/i,/^sa/i]},Mt={narrow:/^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,any:/^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i},bt={any:{am:/^a/i,pm:/^p/i,midnight:/^mn/i,noon:/^md/i,morning:/mañana/i,afternoon:/tarde/i,evening:/tarde/i,night:/noche/i}},yt={ordinalNumber:w({matchPattern:dt,parsePattern:mt,valueCallback:function(e){return parseInt(e,10)}}),era:d({matchPatterns:ut,defaultMatchWidth:"wide",parsePatterns:ct,defaultParseWidth:"any"}),quarter:d({matchPatterns:lt,defaultMatchWidth:"wide",parsePatterns:ht,defaultParseWidth:"any",valueCallback:e=>e+1}),month:d({matchPatterns:ft,defaultMatchWidth:"wide",parsePatterns:gt,defaultParseWidth:"any"}),day:d({matchPatterns:wt,defaultMatchWidth:"wide",parsePatterns:pt,defaultParseWidth:"any"}),dayPeriod:d({matchPatterns:Mt,defaultMatchWidth:"any",parsePatterns:bt,defaultParseWidth:"any"})},vt={code:"es",formatDistance:Ve,formatLong:Qe,formatRelative:Ke,localize:st,match:yt,options:{weekStartsOn:1,firstWeekContainsDate:1}},Pt={lessThanXSeconds:{one:"moins d’une seconde",other:"moins de {{count}} secondes"},xSeconds:{one:"1 seconde",other:"{{count}} secondes"},halfAMinute:"30 secondes",lessThanXMinutes:{one:"moins d’une minute",other:"moins de {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"environ 1 heure",other:"environ {{count}} heures"},xHours:{one:"1 heure",other:"{{count}} heures"},xDays:{one:"1 jour",other:"{{count}} jours"},aboutXWeeks:{one:"environ 1 semaine",other:"environ {{count}} semaines"},xWeeks:{one:"1 semaine",other:"{{count}} semaines"},aboutXMonths:{one:"environ 1 mois",other:"environ {{count}} mois"},xMonths:{one:"1 mois",other:"{{count}} mois"},aboutXYears:{one:"environ 1 an",other:"environ {{count}} ans"},xYears:{one:"1 an",other:"{{count}} ans"},overXYears:{one:"plus d’un an",other:"plus de {{count}} ans"},almostXYears:{one:"presqu’un an",other:"presque {{count}} ans"}},Dt=(e,t,a)=>{let n;const r=Pt[e];return typeof r=="string"?n=r:t===1?n=r.one:n=r.other.replace("{{count}}",String(t)),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?"dans "+n:"il y a "+n:n},$t={full:"EEEE d MMMM y",long:"d MMMM y",medium:"d MMM y",short:"dd/MM/y"},Tt={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},Wt={full:"{{date}} 'à' {{time}}",long:"{{date}} 'à' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Nt={date:c({formats:$t,defaultWidth:"full"}),time:c({formats:Tt,defaultWidth:"full"}),dateTime:c({formats:Wt,defaultWidth:"full"})},xt={lastWeek:"eeee 'dernier à' p",yesterday:"'hier à' p",today:"'aujourd’hui à' p",tomorrow:"'demain à' p'",nextWeek:"eeee 'prochain à' p",other:"P"},St=(e,t,a,n)=>xt[e],Ct={narrow:["av. J.-C","ap. J.-C"],abbreviated:["av. J.-C","ap. J.-C"],wide:["avant Jésus-Christ","après Jésus-Christ"]},jt={narrow:["T1","T2","T3","T4"],abbreviated:["1er trim.","2ème trim.","3ème trim.","4ème trim."],wide:["1er trimestre","2ème trimestre","3ème trimestre","4ème trimestre"]},zt={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],wide:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},Ot={narrow:["D","L","M","M","J","V","S"],short:["di","lu","ma","me","je","ve","sa"],abbreviated:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],wide:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},Ht={narrow:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"mat.",afternoon:"ap.m.",evening:"soir",night:"mat."},abbreviated:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"matin",afternoon:"après-midi",evening:"soir",night:"matin"},wide:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"du matin",afternoon:"de l’après-midi",evening:"du soir",night:"du matin"}},Yt=(e,t)=>{const a=Number(e),n=t==null?void 0:t.unit;if(a===0)return"0";const r=["year","week","hour","minute","second"];let o;return a===1?o=n&&r.includes(n)?"ère":"er":o="ème",a+o},kt={ordinalNumber:Yt,era:s({values:Ct,defaultWidth:"wide"}),quarter:s({values:jt,defaultWidth:"wide",argumentCallback:e=>e-1}),month:s({values:zt,defaultWidth:"wide"}),day:s({values:Ot,defaultWidth:"wide"}),dayPeriod:s({values:Ht,defaultWidth:"wide"})},It=/^(\d+)(ième|ère|ème|er|e)?/i,At=/\d+/i,Ft={narrow:/^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,abbreviated:/^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,wide:/^(avant Jésus-Christ|après Jésus-Christ)/i},Et={any:[/^av/i,/^ap/i]},Xt={narrow:/^T?[1234]/i,abbreviated:/^[1234](er|ème|e)? trim\.?/i,wide:/^[1234](er|ème|e)? trimestre/i},_t={any:[/1/i,/2/i,/3/i,/4/i]},Lt={narrow:/^[jfmasond]/i,abbreviated:/^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i,wide:/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i},Ut={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^av/i,/^ma/i,/^juin/i,/^juil/i,/^ao/i,/^s/i,/^o/i,/^n/i,/^d/i]},Jt={narrow:/^[lmjvsd]/i,short:/^(di|lu|ma|me|je|ve|sa)/i,abbreviated:/^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,wide:/^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i},Vt={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^di/i,/^lu/i,/^ma/i,/^me/i,/^je/i,/^ve/i,/^sa/i]},qt={narrow:/^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,any:/^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i},Rt={any:{am:/^a/i,pm:/^p/i,midnight:/^min/i,noon:/^mid/i,morning:/mat/i,afternoon:/ap/i,evening:/soir/i,night:/nuit/i}},Zt={ordinalNumber:w({matchPattern:It,parsePattern:At,valueCallback:e=>parseInt(e)}),era:d({matchPatterns:Ft,defaultMatchWidth:"wide",parsePatterns:Et,defaultParseWidth:"any"}),quarter:d({matchPatterns:Xt,defaultMatchWidth:"wide",parsePatterns:_t,defaultParseWidth:"any",valueCallback:e=>e+1}),month:d({matchPatterns:Lt,defaultMatchWidth:"wide",parsePatterns:Ut,defaultParseWidth:"any"}),day:d({matchPatterns:Jt,defaultMatchWidth:"wide",parsePatterns:Vt,defaultParseWidth:"any"}),dayPeriod:d({matchPatterns:qt,defaultMatchWidth:"any",parsePatterns:Rt,defaultParseWidth:"any"})},Qt={code:"fr",formatDistance:Dt,formatLong:Nt,formatRelative:St,localize:kt,match:Zt,options:{weekStartsOn:1,firstWeekContainsDate:4}},Bt={lessThanXSeconds:{one:"1秒未満",other:"{{count}}秒未満",oneWithSuffix:"約1秒",otherWithSuffix:"約{{count}}秒"},xSeconds:{one:"1秒",other:"{{count}}秒"},halfAMinute:"30秒",lessThanXMinutes:{one:"1分未満",other:"{{count}}分未満",oneWithSuffix:"約1分",otherWithSuffix:"約{{count}}分"},xMinutes:{one:"1分",other:"{{count}}分"},aboutXHours:{one:"約1時間",other:"約{{count}}時間"},xHours:{one:"1時間",other:"{{count}}時間"},xDays:{one:"1日",other:"{{count}}日"},aboutXWeeks:{one:"約1週間",other:"約{{count}}週間"},xWeeks:{one:"1週間",other:"{{count}}週間"},aboutXMonths:{one:"約1か月",other:"約{{count}}か月"},xMonths:{one:"1か月",other:"{{count}}か月"},aboutXYears:{one:"約1年",other:"約{{count}}年"},xYears:{one:"1年",other:"{{count}}年"},overXYears:{one:"1年以上",other:"{{count}}年以上"},almostXYears:{one:"1年近く",other:"{{count}}年近く"}},Gt=(e,t,a)=>{a=a||{};let n;const r=Bt[e];return typeof r=="string"?n=r:t===1?a.addSuffix&&r.oneWithSuffix?n=r.oneWithSuffix:n=r.one:a.addSuffix&&r.otherWithSuffix?n=r.otherWithSuffix.replace("{{count}}",String(t)):n=r.other.replace("{{count}}",String(t)),a.addSuffix?a.comparison&&a.comparison>0?n+"後":n+"前":n},Kt={full:"y年M月d日EEEE",long:"y年M月d日",medium:"y/MM/dd",short:"y/MM/dd"},ea={full:"H時mm分ss秒 zzzz",long:"H:mm:ss z",medium:"H:mm:ss",short:"H:mm"},ta={full:"{{date}} {{time}}",long:"{{date}} {{time}}",medium:"{{date}} {{time}}",short:"{{date}} {{time}}"},aa={date:c({formats:Kt,defaultWidth:"full"}),time:c({formats:ea,defaultWidth:"full"}),dateTime:c({formats:ta,defaultWidth:"full"})},na={lastWeek:"先週のeeeeのp",yesterday:"昨日のp",today:"今日のp",tomorrow:"明日のp",nextWeek:"翌週のeeeeのp",other:"P"},ra=(e,t,a,n)=>na[e],oa={narrow:["BC","AC"],abbreviated:["紀元前","西暦"],wide:["紀元前","西暦"]},ia={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["第1四半期","第2四半期","第3四半期","第4四半期"]},sa={narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],abbreviated:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],wide:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},da={narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],abbreviated:["日","月","火","水","木","金","土"],wide:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},ma={narrow:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},abbreviated:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},wide:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"}},ua={narrow:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},abbreviated:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},wide:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"}},ca=(e,t)=>{const a=Number(e);switch(String(t==null?void 0:t.unit)){case"year":return`${a}年`;case"quarter":return`第${a}四半期`;case"month":return`${a}月`;case"week":return`第${a}週`;case"date":return`${a}日`;case"hour":return`${a}時`;case"minute":return`${a}分`;case"second":return`${a}秒`;default:return`${a}`}},la={ordinalNumber:ca,era:s({values:oa,defaultWidth:"wide"}),quarter:s({values:ia,defaultWidth:"wide",argumentCallback:e=>Number(e)-1}),month:s({values:sa,defaultWidth:"wide"}),day:s({values:da,defaultWidth:"wide"}),dayPeriod:s({values:ma,defaultWidth:"wide",formattingValues:ua,defaultFormattingWidth:"wide"})},ha=/^第?\d+(年|四半期|月|週|日|時|分|秒)?/i,fa=/\d+/i,ga={narrow:/^(B\.?C\.?|A\.?D\.?)/i,abbreviated:/^(紀元[前後]|西暦)/i,wide:/^(紀元[前後]|西暦)/i},wa={narrow:[/^B/i,/^A/i],any:[/^(紀元前)/i,/^(西暦|紀元後)/i]},pa={narrow:/^[1234]/i,abbreviated:/^Q[1234]/i,wide:/^第[1234一二三四１２３４]四半期/i},Ma={any:[/(1|一|１)/i,/(2|二|２)/i,/(3|三|３)/i,/(4|四|４)/i]},ba={narrow:/^([123456789]|1[012])/,abbreviated:/^([123456789]|1[012])月/i,wide:/^([123456789]|1[012])月/i},ya={any:[/^1\D/,/^2/,/^3/,/^4/,/^5/,/^6/,/^7/,/^8/,/^9/,/^10/,/^11/,/^12/]},va={narrow:/^[日月火水木金土]/,short:/^[日月火水木金土]/,abbreviated:/^[日月火水木金土]/,wide:/^[日月火水木金土]曜日/},Pa={any:[/^日/,/^月/,/^火/,/^水/,/^木/,/^金/,/^土/]},Da={any:/^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i},$a={any:{am:/^(A|午前)/i,pm:/^(P|午後)/i,midnight:/^深夜|真夜中/i,noon:/^正午/i,morning:/^朝/i,afternoon:/^午後/i,evening:/^夜/i,night:/^深夜/i}},Ta={ordinalNumber:w({matchPattern:ha,parsePattern:fa,valueCallback:function(e){return parseInt(e,10)}}),era:d({matchPatterns:ga,defaultMatchWidth:"wide",parsePatterns:wa,defaultParseWidth:"any"}),quarter:d({matchPatterns:pa,defaultMatchWidth:"wide",parsePatterns:Ma,defaultParseWidth:"any",valueCallback:e=>e+1}),month:d({matchPatterns:ba,defaultMatchWidth:"wide",parsePatterns:ya,defaultParseWidth:"any"}),day:d({matchPatterns:va,defaultMatchWidth:"wide",parsePatterns:Pa,defaultParseWidth:"any"}),dayPeriod:d({matchPatterns:Da,defaultMatchWidth:"any",parsePatterns:$a,defaultParseWidth:"any"})},Wa={code:"ja",formatDistance:Gt,formatLong:aa,formatRelative:ra,localize:la,match:Ta,options:{weekStartsOn:0,firstWeekContainsDate:1}},Na={lessThanXSeconds:{one:"1초 미만",other:"{{count}}초 미만"},xSeconds:{one:"1초",other:"{{count}}초"},halfAMinute:"30초",lessThanXMinutes:{one:"1분 미만",other:"{{count}}분 미만"},xMinutes:{one:"1분",other:"{{count}}분"},aboutXHours:{one:"약 1시간",other:"약 {{count}}시간"},xHours:{one:"1시간",other:"{{count}}시간"},xDays:{one:"1일",other:"{{count}}일"},aboutXWeeks:{one:"약 1주",other:"약 {{count}}주"},xWeeks:{one:"1주",other:"{{count}}주"},aboutXMonths:{one:"약 1개월",other:"약 {{count}}개월"},xMonths:{one:"1개월",other:"{{count}}개월"},aboutXYears:{one:"약 1년",other:"약 {{count}}년"},xYears:{one:"1년",other:"{{count}}년"},overXYears:{one:"1년 이상",other:"{{count}}년 이상"},almostXYears:{one:"거의 1년",other:"거의 {{count}}년"}},xa=(e,t,a)=>{let n;const r=Na[e];return typeof r=="string"?n=r:t===1?n=r.one:n=r.other.replace("{{count}}",t.toString()),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?n+" 후":n+" 전":n},Sa={full:"y년 M월 d일 EEEE",long:"y년 M월 d일",medium:"y.MM.dd",short:"y.MM.dd"},Ca={full:"a H시 mm분 ss초 zzzz",long:"a H:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},ja={full:"{{date}} {{time}}",long:"{{date}} {{time}}",medium:"{{date}} {{time}}",short:"{{date}} {{time}}"},za={date:c({formats:Sa,defaultWidth:"full"}),time:c({formats:Ca,defaultWidth:"full"}),dateTime:c({formats:ja,defaultWidth:"full"})},Oa={lastWeek:"'지난' eeee p",yesterday:"'어제' p",today:"'오늘' p",tomorrow:"'내일' p",nextWeek:"'다음' eeee p",other:"P"},Ha=(e,t,a,n)=>Oa[e],Ya={narrow:["BC","AD"],abbreviated:["BC","AD"],wide:["기원전","서기"]},ka={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1분기","2분기","3분기","4분기"]},Ia={narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],abbreviated:["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"],wide:["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"]},Aa={narrow:["일","월","화","수","목","금","토"],short:["일","월","화","수","목","금","토"],abbreviated:["일","월","화","수","목","금","토"],wide:["일요일","월요일","화요일","수요일","목요일","금요일","토요일"]},Fa={narrow:{am:"오전",pm:"오후",midnight:"자정",noon:"정오",morning:"아침",afternoon:"오후",evening:"저녁",night:"밤"},abbreviated:{am:"오전",pm:"오후",midnight:"자정",noon:"정오",morning:"아침",afternoon:"오후",evening:"저녁",night:"밤"},wide:{am:"오전",pm:"오후",midnight:"자정",noon:"정오",morning:"아침",afternoon:"오후",evening:"저녁",night:"밤"}},Ea={narrow:{am:"오전",pm:"오후",midnight:"자정",noon:"정오",morning:"아침",afternoon:"오후",evening:"저녁",night:"밤"},abbreviated:{am:"오전",pm:"오후",midnight:"자정",noon:"정오",morning:"아침",afternoon:"오후",evening:"저녁",night:"밤"},wide:{am:"오전",pm:"오후",midnight:"자정",noon:"정오",morning:"아침",afternoon:"오후",evening:"저녁",night:"밤"}},Xa=(e,t)=>{const a=Number(e);switch(String(t==null?void 0:t.unit)){case"minute":case"second":return String(a);case"date":return a+"일";default:return a+"번째"}},_a={ordinalNumber:Xa,era:s({values:Ya,defaultWidth:"wide"}),quarter:s({values:ka,defaultWidth:"wide",argumentCallback:e=>e-1}),month:s({values:Ia,defaultWidth:"wide"}),day:s({values:Aa,defaultWidth:"wide"}),dayPeriod:s({values:Fa,defaultWidth:"wide",formattingValues:Ea,defaultFormattingWidth:"wide"})},La=/^(\d+)(일|번째)?/i,Ua=/\d+/i,Ja={narrow:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(기원전|서기)/i},Va={any:[/^(bc|기원전)/i,/^(ad|서기)/i]},qa={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234]사?분기/i},Ra={any:[/1/i,/2/i,/3/i,/4/i]},Za={narrow:/^(1[012]|[123456789])/,abbreviated:/^(1[012]|[123456789])월/i,wide:/^(1[012]|[123456789])월/i},Qa={any:[/^1월?$/,/^2/,/^3/,/^4/,/^5/,/^6/,/^7/,/^8/,/^9/,/^10/,/^11/,/^12/]},Ba={narrow:/^[일월화수목금토]/,short:/^[일월화수목금토]/,abbreviated:/^[일월화수목금토]/,wide:/^[일월화수목금토]요일/},Ga={any:[/^일/,/^월/,/^화/,/^수/,/^목/,/^금/,/^토/]},Ka={any:/^(am|pm|오전|오후|자정|정오|아침|저녁|밤)/i},en={any:{am:/^(am|오전)/i,pm:/^(pm|오후)/i,midnight:/^자정/i,noon:/^정오/i,morning:/^아침/i,afternoon:/^오후/i,evening:/^저녁/i,night:/^밤/i}},tn={ordinalNumber:w({matchPattern:La,parsePattern:Ua,valueCallback:e=>parseInt(e,10)}),era:d({matchPatterns:Ja,defaultMatchWidth:"wide",parsePatterns:Va,defaultParseWidth:"any"}),quarter:d({matchPatterns:qa,defaultMatchWidth:"wide",parsePatterns:Ra,defaultParseWidth:"any",valueCallback:e=>e+1}),month:d({matchPatterns:Za,defaultMatchWidth:"wide",parsePatterns:Qa,defaultParseWidth:"any"}),day:d({matchPatterns:Ba,defaultMatchWidth:"wide",parsePatterns:Ga,defaultParseWidth:"any"}),dayPeriod:d({matchPatterns:Ka,defaultMatchWidth:"any",parsePatterns:en,defaultParseWidth:"any"})},an={code:"ko",formatDistance:xa,formatLong:za,formatRelative:Ha,localize:_a,match:tn,options:{weekStartsOn:0,firstWeekContainsDate:1}},nn={lessThanXSeconds:{one:"menos de um segundo",other:"menos de {{count}} segundos"},xSeconds:{one:"1 segundo",other:"{{count}} segundos"},halfAMinute:"meio minuto",lessThanXMinutes:{one:"menos de um minuto",other:"menos de {{count}} minutos"},xMinutes:{one:"1 minuto",other:"{{count}} minutos"},aboutXHours:{one:"aproximadamente 1 hora",other:"aproximadamente {{count}} horas"},xHours:{one:"1 hora",other:"{{count}} horas"},xDays:{one:"1 dia",other:"{{count}} dias"},aboutXWeeks:{one:"aproximadamente 1 semana",other:"aproximadamente {{count}} semanas"},xWeeks:{one:"1 semana",other:"{{count}} semanas"},aboutXMonths:{one:"aproximadamente 1 mês",other:"aproximadamente {{count}} meses"},xMonths:{one:"1 mês",other:"{{count}} meses"},aboutXYears:{one:"aproximadamente 1 ano",other:"aproximadamente {{count}} anos"},xYears:{one:"1 ano",other:"{{count}} anos"},overXYears:{one:"mais de 1 ano",other:"mais de {{count}} anos"},almostXYears:{one:"quase 1 ano",other:"quase {{count}} anos"}},rn=(e,t,a)=>{let n;const r=nn[e];return typeof r=="string"?n=r:t===1?n=r.one:n=r.other.replace("{{count}}",String(t)),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?"daqui a "+n:"há "+n:n},on={full:"EEEE, d 'de' MMMM 'de' y",long:"d 'de' MMMM 'de' y",medium:"d 'de' MMM 'de' y",short:"dd/MM/y"},sn={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},dn={full:"{{date}} 'às' {{time}}",long:"{{date}} 'às' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},mn={date:c({formats:on,defaultWidth:"full"}),time:c({formats:sn,defaultWidth:"full"}),dateTime:c({formats:dn,defaultWidth:"full"})},un={lastWeek:e=>{const t=e.getDay();return"'"+(t===0||t===6?"último":"última")+"' eeee 'às' p"},yesterday:"'ontem às' p",today:"'hoje às' p",tomorrow:"'amanhã às' p",nextWeek:"eeee 'às' p",other:"P"},cn=(e,t,a,n)=>{const r=un[e];return typeof r=="function"?r(t):r},ln={narrow:["aC","dC"],abbreviated:["a.C.","d.C."],wide:["antes de Cristo","depois de Cristo"]},hn={narrow:["1","2","3","4"],abbreviated:["T1","T2","T3","T4"],wide:["1º trimestre","2º trimestre","3º trimestre","4º trimestre"]},fn={narrow:["j","f","m","a","m","j","j","a","s","o","n","d"],abbreviated:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],wide:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},gn={narrow:["d","s","t","q","q","s","s"],short:["dom","seg","ter","qua","qui","sex","sáb"],abbreviated:["dom","seg","ter","qua","qui","sex","sáb"],wide:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},wn={narrow:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"noite",night:"madrugada"},abbreviated:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"noite",night:"madrugada"},wide:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"noite",night:"madrugada"}},pn={narrow:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da noite",night:"da madrugada"},abbreviated:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da noite",night:"da madrugada"},wide:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da noite",night:"da madrugada"}},Mn=(e,t)=>Number(e)+"º",bn={ordinalNumber:Mn,era:s({values:ln,defaultWidth:"wide"}),quarter:s({values:hn,defaultWidth:"wide",argumentCallback:e=>e-1}),month:s({values:fn,defaultWidth:"wide"}),day:s({values:gn,defaultWidth:"wide"}),dayPeriod:s({values:wn,defaultWidth:"wide",formattingValues:pn,defaultFormattingWidth:"wide"})},yn=/^(\d+)(º|ª)?/i,vn=/\d+/i,Pn={narrow:/^(ac|dc|a|d)/i,abbreviated:/^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,wide:/^(antes de cristo|antes da era comum|depois de cristo|era comum)/i},Dn={any:[/^ac/i,/^dc/i],wide:[/^(antes de cristo|antes da era comum)/i,/^(depois de cristo|era comum)/i]},$n={narrow:/^[1234]/i,abbreviated:/^T[1234]/i,wide:/^[1234](º|ª)? trimestre/i},Tn={any:[/1/i,/2/i,/3/i,/4/i]},Wn={narrow:/^[jfmasond]/i,abbreviated:/^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,wide:/^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i},Nn={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ab/i,/^mai/i,/^jun/i,/^jul/i,/^ag/i,/^s/i,/^o/i,/^n/i,/^d/i]},xn={narrow:/^[dstq]/i,short:/^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,abbreviated:/^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,wide:/^(domingo|segunda-?\s?feira|terça-?\s?feira|quarta-?\s?feira|quinta-?\s?feira|sexta-?\s?feira|s[áa]bado)/i},Sn={narrow:[/^d/i,/^s/i,/^t/i,/^q/i,/^q/i,/^s/i,/^s/i],any:[/^d/i,/^seg/i,/^t/i,/^qua/i,/^qui/i,/^sex/i,/^s[áa]/i]},Cn={narrow:/^(a|p|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,any:/^([ap]\.?\s?m\.?|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i},jn={any:{am:/^a/i,pm:/^p/i,midnight:/^meia/i,noon:/^meio/i,morning:/manh[ãa]/i,afternoon:/tarde/i,evening:/noite/i,night:/madrugada/i}},zn={ordinalNumber:w({matchPattern:yn,parsePattern:vn,valueCallback:e=>parseInt(e,10)}),era:d({matchPatterns:Pn,defaultMatchWidth:"wide",parsePatterns:Dn,defaultParseWidth:"any"}),quarter:d({matchPatterns:$n,defaultMatchWidth:"wide",parsePatterns:Tn,defaultParseWidth:"any",valueCallback:e=>e+1}),month:d({matchPatterns:Wn,defaultMatchWidth:"wide",parsePatterns:Nn,defaultParseWidth:"any"}),day:d({matchPatterns:xn,defaultMatchWidth:"wide",parsePatterns:Sn,defaultParseWidth:"any"}),dayPeriod:d({matchPatterns:Cn,defaultMatchWidth:"any",parsePatterns:jn,defaultParseWidth:"any"})},On={code:"pt",formatDistance:rn,formatLong:mn,formatRelative:cn,localize:bn,match:zn,options:{weekStartsOn:1,firstWeekContainsDate:4}};function j(e,t,a){const n=K(),r=kn(e,a.timeZone,a.locale??n.locale);return"formatToParts"in r?Hn(r,t):Yn(r,t)}function Hn(e,t){const a=e.formatToParts(t);for(let n=a.length-1;n>=0;--n)if(a[n].type==="timeZoneName")return a[n].value}function Yn(e,t){const a=e.format(t).replace(/\u200E/g,""),n=/ [\w-+ ]+$/.exec(a);return n?n[0].substr(1):""}function kn(e,t,a){return new Intl.DateTimeFormat(a?[a.code,"en-US"]:void 0,{timeZone:t,timeZoneName:e})}function In(e,t){const a=_n(t);return"formatToParts"in a?Fn(a,e):En(a,e)}const An={year:0,month:1,day:2,hour:3,minute:4,second:5};function Fn(e,t){try{const a=e.formatToParts(t),n=[];for(let r=0;r<a.length;r++){const o=An[a[r].type];o!==void 0&&(n[o]=parseInt(a[r].value,10))}return n}catch(a){if(a instanceof RangeError)return[NaN];throw a}}function En(e,t){const a=e.format(t),n=/(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);return[parseInt(n[3],10),parseInt(n[1],10),parseInt(n[2],10),parseInt(n[4],10),parseInt(n[5],10),parseInt(n[6],10)]}const v={},z=new Intl.DateTimeFormat("en-US",{hourCycle:"h23",timeZone:"America/New_York",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).format(new Date("2014-06-25T04:00:00.123Z")),Xn=z==="06/25/2014, 00:00:00"||z==="‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";function _n(e){return v[e]||(v[e]=Xn?new Intl.DateTimeFormat("en-US",{hourCycle:"h23",timeZone:e,year:"numeric",month:"numeric",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}):new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:e,year:"numeric",month:"numeric",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})),v[e]}function V(e,t,a,n,r,o,i){const u=new Date(0);return u.setUTCFullYear(e,t,a),u.setUTCHours(n,r,o,i),u}const O=36e5,Ln=6e4,P={timezone:/([Z+-].*)$/,timezoneZ:/^(Z)$/,timezoneHH:/^([+-]\d{2})$/,timezoneHHMM:/^([+-])(\d{2}):?(\d{2})$/};function x(e,t,a){if(!e)return 0;let n=P.timezoneZ.exec(e);if(n)return 0;let r,o;if(n=P.timezoneHH.exec(e),n)return r=parseInt(n[1],10),H(r)?-(r*O):NaN;if(n=P.timezoneHHMM.exec(e),n){r=parseInt(n[2],10);const i=parseInt(n[3],10);return H(r,i)?(o=Math.abs(r)*O+i*Ln,n[1]==="+"?-o:o):NaN}if(Vn(e)){t=new Date(t||Date.now());const i=a?t:Un(t),u=N(i,e);return-(a?u:Jn(t,u,e))}return NaN}function Un(e){return V(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds())}function N(e,t){const a=In(e,t),n=V(a[0],a[1]-1,a[2],a[3]%24,a[4],a[5],0).getTime();let r=e.getTime();const o=r%1e3;return r-=o>=0?o:1e3+o,n-r}function Jn(e,t,a){let r=e.getTime()-t;const o=N(new Date(r),a);if(t===o)return t;r-=o-t;const i=N(new Date(r),a);return o===i?o:Math.max(o,i)}function H(e,t){return-23<=e&&e<=23&&(t==null||0<=t&&t<=59)}const Y={};function Vn(e){if(Y[e])return!0;try{return new Intl.DateTimeFormat(void 0,{timeZone:e}),Y[e]=!0,!0}catch{return!1}}const qn=60*1e3,Rn={X:function(e,t,a){const n=D(a.timeZone,e);if(n===0)return"Z";switch(t){case"X":return k(n);case"XXXX":case"XX":return g(n);case"XXXXX":case"XXX":default:return g(n,":")}},x:function(e,t,a){const n=D(a.timeZone,e);switch(t){case"x":return k(n);case"xxxx":case"xx":return g(n);case"xxxxx":case"xxx":default:return g(n,":")}},O:function(e,t,a){const n=D(a.timeZone,e);switch(t){case"O":case"OO":case"OOO":return"GMT"+Zn(n,":");case"OOOO":default:return"GMT"+g(n,":")}},z:function(e,t,a){switch(t){case"z":case"zz":case"zzz":return j("short",e,a);case"zzzz":default:return j("long",e,a)}}};function D(e,t){const a=e?x(e,t,!0)/qn:(t==null?void 0:t.getTimezoneOffset())??0;if(Number.isNaN(a))throw new RangeError("Invalid time zone specified: "+e);return a}function b(e,t){const a=e<0?"-":"";let n=Math.abs(e).toString();for(;n.length<t;)n="0"+n;return a+n}function g(e,t=""){const a=e>0?"-":"+",n=Math.abs(e),r=b(Math.floor(n/60),2),o=b(Math.floor(n%60),2);return a+r+t+o}function k(e,t){return e%60===0?(e>0?"-":"+")+b(Math.abs(e)/60,2):g(e,t)}function Zn(e,t=""){const a=e>0?"-":"+",n=Math.abs(e),r=Math.floor(n/60),o=n%60;return o===0?a+String(r):a+String(r)+t+b(o,2)}function I(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),+e-+t}const Qn=/(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/,$=36e5,A=6e4,Bn=2,h={dateTimePattern:/^([0-9W+-]+)(T| )(.*)/,datePattern:/^([0-9W+-]+)(.*)/,plainTime:/:/,YY:/^(\d{2})$/,YYY:[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],YYYY:/^(\d{4})/,YYYYY:[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],MM:/^-(\d{2})$/,DDD:/^-?(\d{3})$/,MMDD:/^-?(\d{2})-?(\d{2})$/,Www:/^-?W(\d{2})$/,WwwD:/^-?W(\d{2})-?(\d{1})$/,HH:/^(\d{2}([.,]\d*)?)$/,HHMM:/^(\d{2}):?(\d{2}([.,]\d*)?)$/,HHMMSS:/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,timeZone:Qn};function q(e,t={}){if(arguments.length<1)throw new TypeError("1 argument required, but only "+arguments.length+" present");if(e===null)return new Date(NaN);const a=t.additionalDigits==null?Bn:Number(t.additionalDigits);if(a!==2&&a!==1&&a!==0)throw new RangeError("additionalDigits must be 0, 1 or 2");if(e instanceof Date||typeof e=="object"&&Object.prototype.toString.call(e)==="[object Date]")return new Date(e.getTime());if(typeof e=="number"||Object.prototype.toString.call(e)==="[object Number]")return new Date(e);if(Object.prototype.toString.call(e)!=="[object String]")return new Date(NaN);const n=Gn(e),{year:r,restDateString:o}=Kn(n.date,a),i=er(o,r);if(i===null||isNaN(i.getTime()))return new Date(NaN);if(i){const u=i.getTime();let m=0,l;if(n.time&&(m=tr(n.time),m===null||isNaN(m)))return new Date(NaN);if(n.timeZone||t.timeZone){if(l=x(n.timeZone||t.timeZone,new Date(u+m)),isNaN(l))return new Date(NaN)}else l=I(new Date(u+m)),l=I(new Date(u+m+l));return new Date(u+m+l)}else return new Date(NaN)}function Gn(e){const t={};let a=h.dateTimePattern.exec(e),n;if(a?(t.date=a[1],n=a[3]):(a=h.datePattern.exec(e),a?(t.date=a[1],n=a[2]):(t.date=null,n=e)),n){const r=h.timeZone.exec(n);r?(t.time=n.replace(r[1],""),t.timeZone=r[1].trim()):t.time=n}return t}function Kn(e,t){if(e){const a=h.YYY[t],n=h.YYYYY[t];let r=h.YYYY.exec(e)||n.exec(e);if(r){const o=r[1];return{year:parseInt(o,10),restDateString:e.slice(o.length)}}if(r=h.YY.exec(e)||a.exec(e),r){const o=r[1];return{year:parseInt(o,10)*100,restDateString:e.slice(o.length)}}}return{year:null}}function er(e,t){if(t===null)return null;let a,n,r;if(!e||!e.length)return a=new Date(0),a.setUTCFullYear(t),a;let o=h.MM.exec(e);if(o)return a=new Date(0),n=parseInt(o[1],10)-1,E(t,n)?(a.setUTCFullYear(t,n),a):new Date(NaN);if(o=h.DDD.exec(e),o){a=new Date(0);const i=parseInt(o[1],10);return rr(t,i)?(a.setUTCFullYear(t,0,i),a):new Date(NaN)}if(o=h.MMDD.exec(e),o){a=new Date(0),n=parseInt(o[1],10)-1;const i=parseInt(o[2],10);return E(t,n,i)?(a.setUTCFullYear(t,n,i),a):new Date(NaN)}if(o=h.Www.exec(e),o)return r=parseInt(o[1],10)-1,X(r)?F(t,r):new Date(NaN);if(o=h.WwwD.exec(e),o){r=parseInt(o[1],10)-1;const i=parseInt(o[2],10)-1;return X(r,i)?F(t,r,i):new Date(NaN)}return null}function tr(e){let t,a,n=h.HH.exec(e);if(n)return t=parseFloat(n[1].replace(",",".")),T(t)?t%24*$:NaN;if(n=h.HHMM.exec(e),n)return t=parseInt(n[1],10),a=parseFloat(n[2].replace(",",".")),T(t,a)?t%24*$+a*A:NaN;if(n=h.HHMMSS.exec(e),n){t=parseInt(n[1],10),a=parseInt(n[2],10);const r=parseFloat(n[3].replace(",","."));return T(t,a,r)?t%24*$+a*A+r*1e3:NaN}return null}function F(e,t,a){t=t||0,a=a||0;const n=new Date(0);n.setUTCFullYear(e,0,4);const r=n.getUTCDay()||7,o=t*7+a+1-r;return n.setUTCDate(n.getUTCDate()+o),n}const ar=[31,28,31,30,31,30,31,31,30,31,30,31],nr=[31,29,31,30,31,30,31,31,30,31,30,31];function R(e){return e%400===0||e%4===0&&e%100!==0}function E(e,t,a){if(t<0||t>11)return!1;if(a!=null){if(a<1)return!1;const n=R(e);if(n&&a>nr[t]||!n&&a>ar[t])return!1}return!0}function rr(e,t){if(t<1)return!1;const a=R(e);return!(a&&t>366||!a&&t>365)}function X(e,t){return!(e<0||e>52||t!=null&&(t<0||t>6))}function T(e,t,a){return!(e<0||e>=25||t!=null&&(t<0||t>=60)||a!=null&&(a<0||a>=60))}const or=/([xXOz]+)|''|'(''|[^'])+('|$)/g;function ir(e,t,a={}){t=String(t);const n=t.match(or);if(n){const r=q(a.originalDate||e,a);t=n.reduce(function(o,i){if(i[0]==="'")return o;const u=o.indexOf(i),m=o[u-1]==="'",l=o.replace(i,"'"+Rn[i[0]](r,i,a)+"'");return m?l.substring(0,u-1)+l.substring(u+1):l},t)}return f(e,t,a)}function sr(e,t,a){e=q(e,a);const n=x(t,e,!0),r=new Date(e.getTime()-n),o=new Date(0);return o.setFullYear(r.getUTCFullYear(),r.getUTCMonth(),r.getUTCDate()),o.setHours(r.getUTCHours(),r.getUTCMinutes(),r.getUTCSeconds(),r.getUTCMilliseconds()),o}const dr={de:Ue,es:vt,fr:Qt,ja:Wa,ko:an,pt:On},yr=({date:e,time:t})=>{const a=t||new Date,n=Mr(a instanceof Date?a:new Date(a));return`${f(e?new Date(e):new Date,"yyyy-MM-dd")}T${n.split("T")[1]}`},vr=e=>e/1e3,Pr=e=>Math.round(parseInt(e/3600,10)),Dr=e=>Math.round(parseInt(e%3600/60,10)),$r=e=>Math.round(parseInt(e%3600%60,10)),Tr=e=>f(ee(e),"MMM do, yyyy"),mr="dd-MMM-yyyy",Z="MMM d, yyyy",ur="MMM d, yyyy HH:mm:ss",cr="eeee, MMM do, yyyy",Wr="MM/DD/YYYY",lr="hh:mm a",Nr=/^((1[0-2]|0?[1-9]):([0-5][0-9]) (am|AM|pm|PM))$/,hr="yyyy-MM-dd'T'HH:mm:ssXXXXX",fr="MMMM yyyy",_="UTC",Q="hour",B="month",xr=e=>f(new Date(e),mr),S=(e,t)=>{const a=e instanceof Date?e.toISOString():e,n=sr(a,_);return ir(n,t,{timeZone:_})},gr=e=>S(e,fr),wr=e=>S(e,Z),pr=e=>S(e,ur),Sr=(e,t)=>{switch(t){case B:return gr(e);case Q:return pr(e);default:return wr(e)}},Cr=e=>{switch(e){case B:return"Months";case Q:return"Hours";default:return"Days"}},jr=e=>{const t=new Date(e);return f(t,Z)},Mr=e=>f(new Date(e),hr),zr=e=>f(e,cr),Or=(e,t)=>t?f(new Date(e),`MM/dd/yy '${t}' h:mm a`):f(new Date(e),"MM/dd/yy h:mm a"),Hr=(e,t)=>t?f(new Date(e),`MMM dd, yyyy '${t}' h:mm a`):f(new Date(e),"MMM dd, yyyy h:mm a"),Yr=e=>f(new Date(e),"'Scheduled for' MM/dd/yy 'at' h:mm a"),kr=(e,t,a="PPPP p")=>e?f(new Date(e),a,{locale:dr[t]}):"",Ir=e=>f(new Date(e),lr),Ar=e=>{var n;const t=e||new Date().toString(),a=t.match(/\(([^)]+)\)$/)||t.match(/([A-Z]+) [\d]{4}$/);return a?(n=a[1].match(/[A-Z]/g))==null?void 0:n.join(""):""},Fr=e=>{const t=new Date(e);return t.setTime(t.getTime()+t.getTimezoneOffset()*60*1e3),t},Er=(e,t=!1)=>{const a=(e%60).toString().padStart(2,"0"),n=(parseInt(e/60)%60).toString().padStart(2,"0"),r=parseInt(e/60/60).toString().padStart(2,"0");return t&&Number(r)===0?`${n}:${a}`:`${r}:${n}:${a}`},Xr=e=>{const t=(e%60).toString().padStart(2,"0"),a=(parseInt(e/60)%60).toString().padStart(2,"0"),n=parseInt(e/60/60).toString().padStart(2,"0");return Number(n)===0?`${a}m ${t}s`:Number(n)<96?`${n}h ${a}m`:`${parseInt(n/24)}d ${parseInt(n%24).toString().padStart(2,0)}h`};export{sr as A,Pr as B,Dr as C,Wr as D,$r as E,Nr as T,ir as a,kr as b,Tr as c,Fr as d,xr as e,yr as f,Ir as g,wr as h,Or as i,Mr as j,Ar as k,K as l,jr as m,Hr as n,Xr as o,ee as p,Er as q,zr as r,vr as s,q as t,Sr as u,Cr as v,Yr as w,Qn as x,V as y,x as z};
//# sourceMappingURL=time-helpers.js.map
